[flake8]
max-line-length = 120
max-complexity = 10
exclude =
	.git,
	.tox,
	.pytest_cache,
	__pycache__
ignore =
  D100  # Missing docstring in public module
  D104  # Missing docstring in public package
  D107  # Missing docstring in __init__
  W503  # Line break before binary operator
docstring-convention = google
per-file-ignores = __init__.py:F401

application-import-names = aiohttp_micro
import-order-style = smarkets


[isort]
line_length = 120
use_parentheses = 1
order_by_type = 0
include_trailing_comma = 1
known_first_party = wallet,tests


[coverage:run]
branch = True
data_file = tests/.coverage
source = src/aiohttp_micro
omit =
  src/aiohttp_micro/management/*

[coverage:paths]
source =
    src/

[coverage:report]
show_missing = True

[coverage:html]
directory = tests/coverage

[coverage:xml]
output = tests/coverage.xml


[pytest]
python_files = tests.py test_*.py *_test.py
norecursedirs = .tox
markers =
    unit
addopts = --cov --cov-report=term-missing


[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310, lint


[tox]
envlist = lint,py38,py39,py310
isolated_build = True
skipsdist = True

[testenv]
whitelist_externals = poetry
commands=
    poetry install -v

    poetry run py.test {posargs} tests

[testenv:py310]
whitelist_externals = poetry
commands=
    poetry install -v

    poetry run coverage erase
    poetry run coverage run -m py.test {posargs} --cov --cov-report=term-missing tests
    poetry run coverage report -m

[testenv:lint]
basepython = python3.10
whitelist_externals = poetry
commands =
    poetry install -v

    poetry run flake8 src/aiohttp_micro tests
    ; poetry run mypy src/aiohttp_micro tests

